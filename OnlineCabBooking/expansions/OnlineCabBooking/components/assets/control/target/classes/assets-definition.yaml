openapi: 3.0.0
info:
  version: '1.0'
  title: assets component interface
  expanderComment: 'expanded with nsx-expanders:5.12.1, expansionResource net.democritus:Expanders:5.12.1'
  #anchor:custom-info:start
  #anchor:custom-info:end
#anchor:custom-root:start
#anchor:custom-root:end
paths:
  /asset-search-json:
    get:
      summary: 'get asset instances by {searchMethod}'
      description: asset instances are searchable by different search methods, which require different details
      operationId: 'get asset instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllAssets
              - findByNameEq
              - findByFileIdEq
              - findByFileAssetEq
              - findByInternalAssetEq
              - findByExternalAssetEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name type  ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

              downloadLink:
                  value: downloadLink
                  summary: this projections shows [ name type contentType  ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.fileId={yourfileId}

                  - details.fileAsset.id={yourfileAsset}

                  - details.internalAsset.id={yourinternalAsset}

                  - details.externalAsset.id={yourexternalAsset}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=type&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=type&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=fileAsset&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=fileAsset&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=internalAsset&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=internalAsset&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=downloadLink&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=downloadLink&sortFields[4].descending=oneOf{true, false}
                  - sortFields[5].fieldName=contentType&sortFields[5].ascending=oneOf{true, false}
                  - sortFields[5].fieldName=contentType&sortFields[5].descending=oneOf{true, false}
                  - sortFields[6].fieldName=byteSize&sortFields[6].ascending=oneOf{true, false}
                  - sortFields[6].fieldName=byteSize&sortFields[6].descending=oneOf{true, false}
                  - sortFields[7].fieldName=fileSize&sortFields[7].ascending=oneOf{true, false}
                  - sortFields[7].fieldName=fileSize&sortFields[7].descending=oneOf{true, false}
                  - sortFields[8].fieldName=fileId&sortFields[8].ascending=oneOf{true, false}
                  - sortFields[8].fieldName=fileId&sortFields[8].descending=oneOf{true, false}
                  - sortFields[9].fieldName=complete&sortFields[9].ascending=oneOf{true, false}
                  - sortFields[9].fieldName=complete&sortFields[9].descending=oneOf{true, false}
                  - sortFields[10].fieldName=externalAsset&sortFields[10].ascending=oneOf{true, false}
                  - sortFields[10].fieldName=externalAsset&sortFields[10].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/AssetGeneratedResponse'

  /externalAsset-search-json:
    get:
      summary: 'get externalAsset instances by {searchMethod}'
      description: externalAsset instances are searchable by different search methods, which require different details
      operationId: 'get externalAsset instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllExternalAssets
              - findByNameEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name uri byteSize contentType  ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=uri&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=uri&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=byteSize&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=byteSize&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=contentType&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=contentType&sortFields[3].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ExternalAssetGeneratedResponse'

  /fileAsset-search-json:
    get:
      summary: 'get fileAsset instances by {searchMethod}'
      description: fileAsset instances are searchable by different search methods, which require different details
      operationId: 'get fileAsset instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllFileAssets
              - findByNameEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name uploadUri  ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=uploadUri&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=uploadUri&sortFields[1].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/FileAssetGeneratedResponse'

  /internalAsset-search-json:
    get:
      summary: 'get internalAsset instances by {searchMethod}'
      description: internalAsset instances are searchable by different search methods, which require different details
      operationId: 'get internalAsset instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllInternalAssets
              - findByNameEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name  ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/InternalAssetGeneratedResponse'

  /internalAssetChunk-search-json:
    get:
      summary: 'get internalAssetChunk instances by {searchMethod}'
      description: internalAssetChunk instances are searchable by different search methods, which require different details
      operationId: 'get internalAssetChunk instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllInternalAssetChunks
              - findByNameEq
              - findByInternalAssetEq
              - findByInternalAssetEq_PositionEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ byteSize position internalAsset ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.internalAsset.id={yourinternalAsset}

                  - details.position={yourposition}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=content&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=content&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=internalAsset&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=internalAsset&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=byteSize&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=byteSize&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=position&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=position&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=isLast&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=isLast&sortFields[4].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/InternalAssetChunkGeneratedResponse'

  /remoteAsset-search-json:
    get:
      summary: 'get remoteAsset instances by {searchMethod}'
      description: remoteAsset instances are searchable by different search methods, which require different details
      operationId: 'get remoteAsset instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllRemoteAssets
              - findByNameEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name url  ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=url&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=url&sortFields[1].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/RemoteAssetGeneratedResponse'

components:
    schemas:
        DataRef:
            type: object
            properties:
                className:
                    type: string
                classPrefix:
                    type: string
                componentName:
                    type: string
                dataRefLink:
                    type: string
                id:
                    type: number
                name:
                    type: string
                packName:
                    type: string
        DateLong:
            type: object
            properties:
                value:
                    type: string

        AssetGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/AssetDetails'
        AssetDetails:
            type: object
            properties:
                name:
                    type: string
                type:
                    type: string
                fileAsset:
                    $ref: '#/components/schemas/DataRef'
                internalAsset:
                    $ref: '#/components/schemas/DataRef'
                downloadLink:
                    type: hyperlink
                contentType:
                    type: string
                byteSize:
                    type: integer
                fileSize:
                    type: string
                fileId:
                    type: string
                complete:
                    type: boolean
                externalAsset:
                    $ref: '#/components/schemas/DataRef'

        ExternalAssetGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExternalAssetDetails'
        ExternalAssetDetails:
            type: object
            properties:
                name:
                    type: string
                uri:
                    type: hyperlink
                byteSize:
                    type: integer
                contentType:
                    type: string

        FileAssetGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/FileAssetDetails'
        FileAssetDetails:
            type: object
            properties:
                name:
                    type: string
                uploadUri:
                    type: file

        InternalAssetGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/InternalAssetDetails'
        InternalAssetDetails:
            type: object
            properties:
                name:
                    type: string

        InternalAssetChunkGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/InternalAssetChunkDetails'
        InternalAssetChunkDetails:
            type: object
            properties:
                content:
                    type: string
                internalAsset:
                    $ref: '#/components/schemas/DataRef'
                byteSize:
                    type: integer
                position:
                    type: integer
                isLast:
                    type: boolean

        RemoteAssetGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/RemoteAssetDetails'
        RemoteAssetDetails:
            type: object
            properties:
                name:
                    type: string
                url:
                    type: hyperlink

