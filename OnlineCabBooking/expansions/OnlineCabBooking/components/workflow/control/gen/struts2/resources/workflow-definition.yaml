openapi: 3.0.0
info:
  version: '1.0'
  title: workflow component interface
  expanderComment: 'expanded with nsx-expanders:5.12.1, expansionResource net.democritus:Expanders:5.12.1'
  #anchor:custom-info:start
  #anchor:custom-info:end
#anchor:custom-root:start
#anchor:custom-root:end
paths:
  /engineNode-search-json:
    get:
      summary: 'get engineNode instances by {searchMethod}'
      description: engineNode instances are searchable by different search methods, which require different details
      operationId: 'get engineNode instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllEngineNodes
              - findByNameEq
              - findByMasterEq
              - findByMasterEq_LastActiveLt
              - findByLastActiveLt
              - findByStatusEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ status hostname master  ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.master={yourmaster}

                  - details.lastActive={yourlastActive}

                  - details.status={yourstatus}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=status&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=status&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=hostname&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=hostname&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=master&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=master&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=lastActive&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=lastActive&sortFields[4].descending=oneOf{true, false}
                  - sortFields[5].fieldName=activeSince&sortFields[5].ascending=oneOf{true, false}
                  - sortFields[5].fieldName=activeSince&sortFields[5].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/EngineNodeGeneratedResponse'

  /engineNodeService-search-json:
    get:
      summary: 'get engineNodeService instances by {searchMethod}'
      description: engineNodeService instances are searchable by different search methods, which require different details
      operationId: 'get engineNodeService instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllEngineNodeServices
              - findByNameEq
              - findByStatusEq
              - findByEngineNodeEq
              - findByEngineServiceEq_StatusNe
              - findByEngineServiceEq
              - findByEngineNodeEq_EngineServiceEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ status lastRunAt nextRun engineNode engineService ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

              updateDetails:
                  value: updateDetails
                  summary: this projections shows [ status lastRunAt nextRun  ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.status={yourstatus}

                  - details.engineNode.id={yourengineNode}

                  - details.engineService.id={yourengineService}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=status&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=status&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=engineNode&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=engineNode&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=engineService&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=engineService&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=lastRunAt&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=lastRunAt&sortFields[4].descending=oneOf{true, false}
                  - sortFields[5].fieldName=nextRun&sortFields[5].ascending=oneOf{true, false}
                  - sortFields[5].fieldName=nextRun&sortFields[5].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/EngineNodeServiceGeneratedResponse'

  /engineService-search-json:
    get:
      summary: 'get engineService instances by {searchMethod}'
      description: engineService instances are searchable by different search methods, which require different details
      operationId: 'get engineService instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllEngineServices
              - findByNameEq
              - findByBusyEq
              - findByChangedEq
              - findByCollectorEq
              - findByLastRunAtGt
              - findByLastRunAtLt
              - findByNameEq_CollectorEq
              - findByStatusEq
              - findByWorkflowEq
              - findByTimeWindowGroupEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name status waitTime batchSize workflow timeWindowGroup ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

              runningState:
                  value: runningState
                  summary: this projections shows [ name status busy waitTime lastRunAt batchSize maximumNumberOfNodes timeWindowGroup ]

              detailsWithoutRefs:
                  value: detailsWithoutRefs
                  summary: this projections shows [ name status changed busy waitTime collector lastRunAt batchSize maximumNumberOfNodes  ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.busy={yourbusy}

                  - details.changed={yourchanged}

                  - details.collector={yourcollector}

                  - details.lastRunAt={yourlastRunAt}

                  - details.status={yourstatus}

                  - details.workflow.id={yourworkflow}

                  - details.timeWindowGroup.id={yourtimeWindowGroup}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=status&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=status&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=changed&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=changed&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=busy&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=busy&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=waitTime&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=waitTime&sortFields[4].descending=oneOf{true, false}
                  - sortFields[5].fieldName=collector&sortFields[5].ascending=oneOf{true, false}
                  - sortFields[5].fieldName=collector&sortFields[5].descending=oneOf{true, false}
                  - sortFields[6].fieldName=workflow&sortFields[6].ascending=oneOf{true, false}
                  - sortFields[6].fieldName=workflow&sortFields[6].descending=oneOf{true, false}
                  - sortFields[7].fieldName=timeWindowGroup&sortFields[7].ascending=oneOf{true, false}
                  - sortFields[7].fieldName=timeWindowGroup&sortFields[7].descending=oneOf{true, false}
                  - sortFields[8].fieldName=lastRunAt&sortFields[8].ascending=oneOf{true, false}
                  - sortFields[8].fieldName=lastRunAt&sortFields[8].descending=oneOf{true, false}
                  - sortFields[9].fieldName=batchSize&sortFields[9].ascending=oneOf{true, false}
                  - sortFields[9].fieldName=batchSize&sortFields[9].descending=oneOf{true, false}
                  - sortFields[10].fieldName=maximumNumberOfNodes&sortFields[10].ascending=oneOf{true, false}
                  - sortFields[10].fieldName=maximumNumberOfNodes&sortFields[10].descending=oneOf{true, false}
                  - sortFields[11].fieldName=engineNodeServices&sortFields[11].ascending=oneOf{true, false}
                  - sortFields[11].fieldName=engineNodeServices&sortFields[11].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/EngineServiceGeneratedResponse'

  /stateTask-search-json:
    get:
      summary: 'get stateTask instances by {searchMethod}'
      description: stateTask instances are searchable by different search methods, which require different details
      operationId: 'get stateTask instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllStateTasks
              - findByNameEq
              - findByBeginStateEq
              - findByEndStateEq
              - findByFailedStateEq
              - findByWorkflowEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name processor params beginState endState workflow ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

              detailsWithoutRefs:
                  value: detailsWithoutRefs
                  summary: this projections shows [ name processor implementation params beginState interimState failedState endState maxConcurrentTasks timeout  ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.beginState={yourbeginState}

                  - details.endState={yourendState}

                  - details.failedState={yourfailedState}

                  - details.workflow.id={yourworkflow}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=processor&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=processor&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=implementation&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=implementation&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=params&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=params&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=beginState&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=beginState&sortFields[4].descending=oneOf{true, false}
                  - sortFields[5].fieldName=interimState&sortFields[5].ascending=oneOf{true, false}
                  - sortFields[5].fieldName=interimState&sortFields[5].descending=oneOf{true, false}
                  - sortFields[6].fieldName=failedState&sortFields[6].ascending=oneOf{true, false}
                  - sortFields[6].fieldName=failedState&sortFields[6].descending=oneOf{true, false}
                  - sortFields[7].fieldName=endState&sortFields[7].ascending=oneOf{true, false}
                  - sortFields[7].fieldName=endState&sortFields[7].descending=oneOf{true, false}
                  - sortFields[8].fieldName=workflow&sortFields[8].ascending=oneOf{true, false}
                  - sortFields[8].fieldName=workflow&sortFields[8].descending=oneOf{true, false}
                  - sortFields[9].fieldName=maxConcurrentTasks&sortFields[9].ascending=oneOf{true, false}
                  - sortFields[9].fieldName=maxConcurrentTasks&sortFields[9].descending=oneOf{true, false}
                  - sortFields[10].fieldName=timeout&sortFields[10].ascending=oneOf{true, false}
                  - sortFields[10].fieldName=timeout&sortFields[10].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/StateTaskGeneratedResponse'

  /stateTimer-search-json:
    get:
      summary: 'get stateTimer instances by {searchMethod}'
      description: stateTimer instances are searchable by different search methods, which require different details
      operationId: 'get stateTimer instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllStateTimers
              - findByNameEq
              - findByAlteredStateEq
              - findByBeginStateEq
              - findByTargetStateEq
              - findByWorkflowEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name processor beginState targetState allowedPeriod requiredAction workflow ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.alteredState={youralteredState}

                  - details.beginState={yourbeginState}

                  - details.targetState={yourtargetState}

                  - details.workflow.id={yourworkflow}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=processor&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=processor&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=implementation&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=implementation&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=params&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=params&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=beginState&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=beginState&sortFields[4].descending=oneOf{true, false}
                  - sortFields[5].fieldName=targetState&sortFields[5].ascending=oneOf{true, false}
                  - sortFields[5].fieldName=targetState&sortFields[5].descending=oneOf{true, false}
                  - sortFields[6].fieldName=alteredState&sortFields[6].ascending=oneOf{true, false}
                  - sortFields[6].fieldName=alteredState&sortFields[6].descending=oneOf{true, false}
                  - sortFields[7].fieldName=allowedPeriod&sortFields[7].ascending=oneOf{true, false}
                  - sortFields[7].fieldName=allowedPeriod&sortFields[7].descending=oneOf{true, false}
                  - sortFields[8].fieldName=requiredAction&sortFields[8].ascending=oneOf{true, false}
                  - sortFields[8].fieldName=requiredAction&sortFields[8].descending=oneOf{true, false}
                  - sortFields[9].fieldName=workflow&sortFields[9].ascending=oneOf{true, false}
                  - sortFields[9].fieldName=workflow&sortFields[9].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/StateTimerGeneratedResponse'

  /timeTask-search-json:
    get:
      summary: 'get timeTask instances by {searchMethod}'
      description: timeTask instances are searchable by different search methods, which require different details
      operationId: 'get timeTask instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllTimeTasks
              - findByNameEq
              - findByIntervalPeriodEq
              - findByTriggerStateEq
              - findByWorkflowEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name processor triggerState intervalPeriod requiredAction workflow ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.intervalPeriod={yourintervalPeriod}

                  - details.triggerState={yourtriggerState}

                  - details.workflow.id={yourworkflow}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=processor&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=processor&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=implementation&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=implementation&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=params&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=params&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=triggerState&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=triggerState&sortFields[4].descending=oneOf{true, false}
                  - sortFields[5].fieldName=intervalPeriod&sortFields[5].ascending=oneOf{true, false}
                  - sortFields[5].fieldName=intervalPeriod&sortFields[5].descending=oneOf{true, false}
                  - sortFields[6].fieldName=requiredAction&sortFields[6].ascending=oneOf{true, false}
                  - sortFields[6].fieldName=requiredAction&sortFields[6].descending=oneOf{true, false}
                  - sortFields[7].fieldName=workflow&sortFields[7].ascending=oneOf{true, false}
                  - sortFields[7].fieldName=workflow&sortFields[7].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/TimeTaskGeneratedResponse'

  /timeWindow-search-json:
    get:
      summary: 'get timeWindow instances by {searchMethod}'
      description: timeWindow instances are searchable by different search methods, which require different details
      operationId: 'get timeWindow instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllTimeWindows
              - findByNameEq
              - findByStartTimeEq
              - findByStopTimeEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name startTime stopTime  ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.startTime={yourstartTime}

                  - details.stopTime={yourstopTime}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=startTime&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=startTime&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=stopTime&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=stopTime&sortFields[2].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/TimeWindowGeneratedResponse'

  /timeWindowGroup-search-json:
    get:
      summary: 'get timeWindowGroup instances by {searchMethod}'
      description: timeWindowGroup instances are searchable by different search methods, which require different details
      operationId: 'get timeWindowGroup instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllTimeWindowGroups
              - findByNameEq
              - findByVisibleEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name visible timeWindows ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.visible={yourvisible}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=visible&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=visible&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=timeWindows&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=timeWindows&sortFields[2].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/TimeWindowGroupGeneratedResponse'

  /workflow-search-json:
    get:
      summary: 'get workflow instances by {searchMethod}'
      description: workflow instances are searchable by different search methods, which require different details
      operationId: 'get workflow instances by {searchMethod}'
      parameters:
        - name: searchMethod
          in: query
          required: true
          schema:
            type: string
            enum:
              - findAllWorkflows
              - findByNameEq
              - findByResponsibleEq
              - findByTargetEq
        - name: projection
          in: query
          schema:
              type: string
              default: details
          examples:
              details:
                  value: details
                  summary: details projection shows all fields

              info:
                  value: info
                  summary: this projections shows [ name componentName className sequencingStrategy  ]

              dataRef:
                  value: dataRef
                  summary: this projections shows [   ]

        - name: page
          in: query
          schema:
             type: integer
             default: 0
             format: int32
        - name: perpage
          in: query
          schema:
              type: integer
              default: 10
              format: int32
        - name: details
          in: query
          schema:
              type: string
              enum:
                  - details.name={yourname}

                  - details.responsible.id={yourresponsible}

                  - details.target={yourtarget}

        - name: sortFields
          in: query
          schema:
              type: string
              enum:
                  - sortFields[0].fieldName=name&sortFields[0].ascending=oneOf{true, false}
                  - sortFields[0].fieldName=name&sortFields[0].descending=oneOf{true, false}
                  - sortFields[1].fieldName=target&sortFields[1].ascending=oneOf{true, false}
                  - sortFields[1].fieldName=target&sortFields[1].descending=oneOf{true, false}
                  - sortFields[2].fieldName=componentName&sortFields[2].ascending=oneOf{true, false}
                  - sortFields[2].fieldName=componentName&sortFields[2].descending=oneOf{true, false}
                  - sortFields[3].fieldName=className&sortFields[3].ascending=oneOf{true, false}
                  - sortFields[3].fieldName=className&sortFields[3].descending=oneOf{true, false}
                  - sortFields[4].fieldName=responsible&sortFields[4].ascending=oneOf{true, false}
                  - sortFields[4].fieldName=responsible&sortFields[4].descending=oneOf{true, false}
                  - sortFields[5].fieldName=sequencingStrategy&sortFields[5].ascending=oneOf{true, false}
                  - sortFields[5].fieldName=sequencingStrategy&sortFields[5].descending=oneOf{true, false}
      responses:
          '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/WorkflowGeneratedResponse'

components:
    schemas:
        DataRef:
            type: object
            properties:
                className:
                    type: string
                classPrefix:
                    type: string
                componentName:
                    type: string
                dataRefLink:
                    type: string
                id:
                    type: number
                name:
                    type: string
                packName:
                    type: string
        DateLong:
            type: object
            properties:
                value:
                    type: string

        EngineNodeGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/EngineNodeDetails'
        EngineNodeDetails:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: string
                hostname:
                    type: string
                master:
                    type: boolean
                lastActive:
                    type: datelong
                activeSince:
                    type: datelong

        EngineNodeServiceGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/EngineNodeServiceDetails'
        EngineNodeServiceDetails:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: string
                engineNode:
                    $ref: '#/components/schemas/DataRef'
                engineService:
                    $ref: '#/components/schemas/DataRef'
                lastRunAt:
                    type: datelong
                nextRun:
                    type: datelong

        EngineServiceGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/EngineServiceDetails'
        EngineServiceDetails:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: string
                changed:
                    type: string
                busy:
                    type: string
                waitTime:
                    type: integer
                collector:
                    type: integer
                workflow:
                    $ref: '#/components/schemas/DataRef'
                timeWindowGroup:
                    $ref: '#/components/schemas/DataRef'
                lastRunAt:
                    type: string
                batchSize:
                    type: integer
                maximumNumberOfNodes:
                    type: integer
                engineNodeServices:
                    $ref: '#/components/schemas/DataRef'

        StateTaskGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StateTaskDetails'
        StateTaskDetails:
            type: object
            properties:
                name:
                    type: string
                processor:
                    type: string
                implementation:
                    type: string
                params:
                    type: string
                beginState:
                    type: string
                interimState:
                    type: string
                failedState:
                    type: string
                endState:
                    type: string
                workflow:
                    $ref: '#/components/schemas/DataRef'
                maxConcurrentTasks:
                    type: integer
                timeout:
                    type: integer

        StateTimerGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StateTimerDetails'
        StateTimerDetails:
            type: object
            properties:
                name:
                    type: string
                processor:
                    type: string
                implementation:
                    type: string
                params:
                    type: string
                beginState:
                    type: string
                targetState:
                    type: string
                alteredState:
                    type: string
                allowedPeriod:
                    type: integer
                requiredAction:
                    type: string
                workflow:
                    $ref: '#/components/schemas/DataRef'

        TimeTaskGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/TimeTaskDetails'
        TimeTaskDetails:
            type: object
            properties:
                name:
                    type: string
                processor:
                    type: string
                implementation:
                    type: string
                params:
                    type: string
                triggerState:
                    type: string
                intervalPeriod:
                    type: integer
                requiredAction:
                    type: string
                workflow:
                    $ref: '#/components/schemas/DataRef'

        TimeWindowGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/TimeWindowDetails'
        TimeWindowDetails:
            type: object
            properties:
                name:
                    type: string
                startTime:
                    type: string
                stopTime:
                    type: string

        TimeWindowGroupGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/TimeWindowGroupDetails'
        TimeWindowGroupDetails:
            type: object
            properties:
                name:
                    type: string
                visible:
                    type: string
                timeWindows:
                    $ref: '#/components/schemas/DataRef'

        WorkflowGeneratedResponse:
            type: object
            properties:
                currentPage:
                    type: integer
                    format: int32
                rowsPerPage:
                    type: integer
                    format: int32
                numberOfPages:
                    type: integer
                    format: int32
                success:
                    type: boolean
                totalNumberOfItems:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/WorkflowDetails'
        WorkflowDetails:
            type: object
            properties:
                name:
                    type: string
                target:
                    type: string
                componentName:
                    type: string
                className:
                    type: string
                responsible:
                    $ref: '#/components/schemas/DataRef'
                sequencingStrategy:
                    type: string

