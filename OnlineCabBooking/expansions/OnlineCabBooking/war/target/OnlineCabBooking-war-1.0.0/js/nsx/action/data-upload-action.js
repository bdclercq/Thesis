define(["require","exports","knockout","jquery","nsx/triggers","nsx/nsx-actions","nsx/nsx-struts-helper","nsx/error/error-trigger"],(function(e,r,n,s,t,i,o,a){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.defineUploadAction=void 0,r.defineUploadAction=function(e,r){r=r||{};var l=n.observable({}),c=n.observable(!1),g=n.observableArray([]),u=n.observableArray([]),d=n.observable({}),f=t.defineTrigger(),p=t.defineTrigger(),b=t.defineTrigger(),v=a.defineTrigger({subject:e.element.getQualifiedName()+".upload"});function m(e){if(l({}),c(!1),g([]),u([]),d({}),v.info(e.nbLinesImported+" line(s) imported"),e.completelySuccessful)p.trigger();else{v.error(e.nbLinesFailed+" line(s) failed");for(var r=0;r<e.readErrors.length;r++)v.error(e.readErrors[r].fullMessage);b.trigger()}f.trigger()}return e.trigger.subscribe((function(){var r,t=n.unwrap(e.instance),a={};for(var l in t)t.hasOwnProperty(l)&&(t[l]instanceof File?(r=t[l],l):a[l]=t[l]);!function(r,n){var t=e.element,a=o.mapToFormData(r);a.append("file",n);var l=i.getElementAction(t,"upload-json");s.ajax({type:"POST",url:l,data:a,processData:!1,contentType:!1}).then(m)}(a,r)})),{result:l,success:c,messages:g,errorMessages:u,fieldErrorMap:d,completeEvent:f,successEvent:p,errorEvent:b}}}));