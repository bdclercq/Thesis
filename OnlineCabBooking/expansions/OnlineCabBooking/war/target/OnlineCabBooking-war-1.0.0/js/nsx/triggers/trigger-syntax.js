define(["require","exports","nsx/triggers/bundled-trigger","nsx/triggers/intersection-trigger"],(function(t,r,e,i){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.when=void 0;var n=function(){function t(t){this.trigger=t}return t.prototype.thenDo=function(t){this.trigger.subscribe(t)},t.prototype.thenTrigger=function(t){this.trigger.subscribe(t.trigger)},t.prototype.thenUpdate=function(t){this.trigger.subscribe(t)},t.prototype.or=function(t){return new o(this.trigger,t)},t.prototype.and=function(t){return new g([this.trigger,t])},t}(),o=function(){function t(t,r){this.trigger=(0,e.defineBundledTrigger)(),this.trigger.addTrigger(t),this.trigger.addTrigger(r)}return t.prototype.thenDo=function(t){this.trigger.subscribe(t)},t.prototype.thenTrigger=function(t){this.trigger.subscribe(t.trigger)},t.prototype.thenUpdate=function(t){this.trigger.subscribe(t)},t.prototype.or=function(t){return this.trigger.addTrigger(t),this},t.prototype.and=function(t){return new g([this.trigger,t])},t}(),g=function(){function t(t){this.trigger=(0,i.defineIntersectionTrigger)({triggers:t})}return t.prototype.thenDo=function(t){this.trigger.subscribe(t)},t.prototype.thenTrigger=function(t){this.trigger.subscribe(t.trigger)},t.prototype.thenUpdate=function(){throw new Error("Cannot update with conjunction")},t.prototype.or=function(t){return new o(this.trigger,t)},t.prototype.and=function(r){return new t(this.triggers.concat([r]))},t}();r.when=function(t){return new n(t)}}));