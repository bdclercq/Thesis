-- anchor:custom-imports:start
import java.util.ArrayList;
import java.util.Arrays;
-- anchor:custom-imports:end
-- anchor:custom-findBySpecificationOrWildcard-finder:start
    DataAccessFindBySpecificationOrWildcardDetails details = searchDetails.getDetails();

    List<String> elementPatterns = new ArrayList<>();
    if (details.getElement() != null && !details.getElement().isEmpty()) {
      elementPatterns.add("*");
      elementPatterns.add(details.getElement());
      if (details.getComponent() != null && !details.getComponent().isEmpty()) {
        elementPatterns.add(details.getComponent() + "_*");
        elementPatterns.add(details.getComponent() + "_" + details.getElement());
      }
    }

    JPAQueryBuilder queryBuilder = createQueryBuilder()
        .addParameter(QueryParameter.createDataRefParameter("forProfile", "=", "ForProfile", details.getForProfile()))
        .addParameter(QueryParameter.createDataRefParameter("forUserGroup", "=", "ForUserGroup", details.getForUserGroup()))
        .addParameter(QueryParameter.createDataRefParameter("forUser", "=", "ForUser", details.getForUser()))
        .addParameter(QueryParameter.createValueParameter("element", "IN", "Element", elementPatterns))
        .addParameter(QueryParameter.createValueParameter("functionality", "IN", "Functionality",
            details.getFunctionality() != null && !details.getFunctionality().isEmpty()
                ? Arrays.asList("all", details.getFunctionality())
                : null))
        .addSortFields(searchDetails.getSortFields());

    searchResult = fetchData((ParameterContext) searchParameter, queryBuilder);
-- anchor:custom-findBySpecificationOrWildcard-finder:end
