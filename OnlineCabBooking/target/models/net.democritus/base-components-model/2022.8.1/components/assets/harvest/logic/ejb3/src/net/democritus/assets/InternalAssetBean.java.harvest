-- anchor:custom-imports:start
import java.io.ByteArrayInputStream;
-- anchor:custom-imports:end
-- anchor:custom-methods:start
  @Override
  public CrudsResult<Void> uploadAssetChunk(ParameterContext<AssetChunk> parameter) {
    AssetLocalAgent assetAgent = AssetLocalAgent.getAssetAgent(parameter.getContext());
    AssetChunk assetChunk = parameter.getValue();
    DataRef asset = assetChunk.getAsset();

    CrudsResult<AssetDetails> assetFindResult = assetAgent.getDetails(asset);
    if (assetFindResult.isError()) {
      return assetFindResult.convertError();
    }

    AssetDetails assetDetails = assetFindResult.getValue();
    DataRef internalAsset = assetDetails.getInternalAsset();

    InternalAssetDetails internalAssetDetails = getDetails(internalAsset);
    return new InternalAssetChunkUploader().upload(parameter, internalAssetDetails);
  }

  @Override
  public CrudsResult<AssetChunk> getAssetChunk(ParameterContext<AssetChunkRef> refParam) {
    AssetLocalAgent assetAgent = AssetLocalAgent.getAssetAgent(refParam.getContext());

    AssetChunkRef chunkRef = refParam.getValue();
    CrudsResult<AssetDetails> assetFindResult = assetAgent.getDetails(chunkRef.getAsset());

    if (assetFindResult.isError()) {
      return assetFindResult.convertError();
    }

    DataRef internalAsset = assetFindResult.getValue().getInternalAsset();

    return new InternalAssetChunkRetriever().retrieve(refParam, internalAsset);
  }

  private CrudsResult<Void> deleteChunks(ParameterContext<DataRef> parameter) {
    InternalAssetChunkLocalAgent internalAssetChunkAgent = InternalAssetChunkLocalAgent.getInternalAssetChunkAgent(parameter.getUserContext());
    DataRef intAsset = parameter.getValue();

    InternalAssetChunkFindByInternalAssetEqDetails finder = new InternalAssetChunkFindByInternalAssetEqDetails();
    finder.setInternalAsset(intAsset);

    SearchDetails<InternalAssetChunkFindByInternalAssetEqDetails> searchDetails = SearchDetails.fetchAll(finder);
    searchDetails.setProjection("dataRef");

    SearchResult<DataRef> searchResult = internalAssetChunkAgent.find(searchDetails);

    if (searchResult.isError()) {
      return diagnosticHelper.createCrudsError(
          diagnosticFactory.error("assets.internalAsset.deleteFailed"),
          searchResult.getDiagnostics());
    }

    for (DataRef chunkRef : searchResult.getResults()) {
      internalAssetChunkAgent.delete(chunkRef.getId());
    }

    return CrudsResult.success();
  }
-- anchor:custom-methods:end
-- anchor:custom-preDelete:start
    CrudsResult<Void> deleteResult = deleteChunks(idParameter.construct(idToDataRef(id)));
    if (deleteResult.isError()) {
      return deleteResult;
    }
-- anchor:custom-preDelete:end
