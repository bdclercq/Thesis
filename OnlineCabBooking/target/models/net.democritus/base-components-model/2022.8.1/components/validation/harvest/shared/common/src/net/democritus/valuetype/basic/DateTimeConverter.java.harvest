-- anchor:custom-imports:start
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import net.democritus.valuetype.basic.jquery.JQueryDateFormat;
-- anchor:custom-imports:end
-- anchor:custom-methods:start
  private DateFormat dateFormatter() {
    String dateFormatString = JQueryDateFormat.localeToJavaDateFormat(this.locale);
    return new SimpleDateFormat(dateFormatString + " hh:mm");
  }
-- anchor:custom-methods:end
-- anchor:custom-asString:start
    if (dateTime == null || dateTime.getValue() == null) {
      return Result.success("");
    }

    result = Result.success(this.dateFormatter().format(dateTime.getValue()));
-- anchor:custom-asString:end
-- anchor:custom-fromStorageType:start
    result = Result.success(new DateTime(value));
-- anchor:custom-fromStorageType:end
-- anchor:custom-fromString:start
    if (value == null || value.trim().length() == 0) {
      return Result.success(new DateTime(null));
    }

    try {
      Date date = this.dateFormatter().parse(value);
      result = Result.success(new DateTime(date));
    } catch (ParseException var3) {
      result = Result.error("net.democritus.valuetype.basic.datetime.not.valid");
    }
-- anchor:custom-fromString:end
-- anchor:custom-toStorageType:start
    if (dateTime == null) {
      result = Result.success(null);
    } else {
      result = Result.success(dateTime.getValue());
    }
-- anchor:custom-toStorageType:end
