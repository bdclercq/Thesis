-- anchor:custom-imports:start
import javax.naming.NamingException;
import net.democritus.jndi.ComponentJNDI;
-- anchor:custom-imports:end
-- anchor:custom-variables:start
    EmailSenderLocal emailSender;

-- anchor:custom-variables:end
-- anchor:custom-methods:start
    public TaskResult<Void> sendEmail(ParameterContext<NotifierDetails> targetParameter) {
      TaskResult<Void> taskResult = TaskResult.success(null);
      if (logger.isInfoEnabled()) {
          logger.info(
              "Performing EmailSenderImpl sendEmail"
          );
      }
      try {
        logger.info("call sendMail on EmailSenderLocal"); // should be on EmailSenderLocalAgent
        NotifierDetails notifierDetails = targetParameter.getValue();
        emailSender = createEmailSenderLocal();
        taskResult = emailSender.sendEmail(targetParameter.construct(notifierDetails));
      }
      catch (Exception e) {
        taskResult = TaskResult.error();
        if (logger.isErrorEnabled()) {
            logger.error(
                "Exception in EmailSenderImpl implementation", e
            );
        }
      }
      return taskResult;
    }

    private EmailSenderLocal createEmailSenderLocal() {
      ComponentJNDI componentJNDI = ComponentJNDI.getComponentJNDI("notification");
      String remoteName = componentJNDI.getTaskLocalName("EmailSender");
      try {
        return componentJNDI.lookupRemote(remoteName);
      } catch (NamingException e) {
        throw new IllegalStateException("Could not find EmailSenderLocal", e);
      }
    }
-- anchor:custom-methods:end
-- anchor:custom-perform:start
        taskResult = sendEmail(targetParameter);
-- anchor:custom-perform:end
