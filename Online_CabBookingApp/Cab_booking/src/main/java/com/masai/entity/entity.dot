digraph "package" {

splines  = ortho;
fontname = "Inconsolata";

node [colorscheme = ylgnbu4];
edge [colorscheme = dark28, dir = both];

Abstractuser       [shape = record, label = "{ Abstractuser | + Abstractuser(Integer, String, String, String, Address, String) : \l + Abstractuser() : \l|- Username : String\l - Password : String\l - Mobile : String\l - userId : Integer\l - Email : String\l - address : Address\l|+ equals(Object) : boolean\l # canEqual(Object) : boolean\l + hashCode() : int\l + toString() : String\l| userId : Integer\l  Username : String\l  Email : String\l  Password : String\l  address : Address\l  Mobile : String\l }"];
Address            [shape = record, label = "{ Address | + Address(Integer, String, String, String) : \l + Address() : \l|- city : String\l - id : Integer\l - state : String\l - pincode : String\l| city : String\l  state : String\l  id : Integer\l  pincode : String\l }"];
Admin              [shape = record, label = "{ Admin | + Admin() : \l|+ equals(Object) : boolean\l # canEqual(Object) : boolean\l + hashCode() : int\l + toString() : String\l }"];
Cab                [shape = record, label = "{ Cab | + Cab(Integer, String, Integer, Driver) : \l + Cab() : \l|- carType : String\l - driver : Driver\l - cabId : Integer\l - ratePerKm : Integer\l|# canEqual(Object) : boolean\l + toString() : String\l + hashCode() : int\l + equals(Object) : boolean\l| carType : String\l  ratePerKm : Integer\l  cabId : Integer\l  driver : Driver\l }"];
CurrentUserSession [shape = record, label = "{ CurrentUserSession | + CurrentUserSession(Integer, Integer, String, LocalDateTime) : \l + CurrentUserSession() : \l + CurrentUserSession(Integer, String, LocalDateTime) : \l|- userId : Integer\l - id : Integer\l - localDateTime : LocalDateTime\l - uuid : String\l|+ hashCode() : int\l + toString() : String\l # canEqual(Object) : boolean\l + equals(Object) : boolean\l| userId : Integer\l  localDateTime : LocalDateTime\l  id : Integer\l  uuid : String\l }"];
Customer           [shape = record, label = "{ Customer | + Customer(boolean) : \l + Customer() : \l|- journey_status : boolean\l|+ equals(Object) : boolean\l # canEqual(Object) : boolean\l + hashCode() : int\l + toString() : String\l| journey_status : boolean\l }"];
CustomerDTO        [shape = record, label = "{ CustomerDTO | + CustomerDTO() : \l|- password : String\l - userId : Integer\l|+ equals(Object) : boolean\l # canEqual(Object) : boolean\l + hashCode() : int\l + toString() : String\l| userId : Integer\l  password : String\l }"];
Driver             [shape = record, label = "{ Driver | + Driver(Integer, Double, Boolean, Cab, TripBooking) : \l + Driver() : \l|- rating : Double\l - cab : Cab\l - tripBooking : TripBooking\l - available : Boolean\l - licenseNo : Integer\l|+ hashCode() : int\l # canEqual(Object) : boolean\l + toString() : String\l + equals(Object) : boolean\l| rating : Double\l  licenseNo : Integer\l  available : Boolean\l  tripBooking : TripBooking\l  cab : Cab\l }"];
Payment            [shape = record, label = "{ \<\<enumeration\>\>\nPayment | + Payment() : \l|+ values() : Payment[]\l + valueOf(String) : Payment\l }"];
TripBooking        [shape = record, label = "{ TripBooking | + TripBooking(Integer, Integer, Driver, String, String, LocalDate, LocalDate, Integer, Integer, Boolean) : \l + TripBooking() : \l|- From_location : String\l - To_location : String\l - Totalamount : Integer\l - driver : Driver\l - CustomerId : Integer\l - Todate_time : LocalDate\l - TripBookingId : Integer\l - Fromdate_time : LocalDate\l - km : Integer\l - Payment : Boolean\l|+ equals(Object) : boolean\l + hashCode() : int\l # canEqual(Object) : boolean\l + toString() : String\l| Fromdate_time : LocalDate\l  Todate_time : LocalDate\l  CustomerId : Integer\l  km : Integer\l  From_location : String\l  TripBookingId : Integer\l  driver : Driver\l  Totalamount : Integer\l  Payment : Boolean\l  To_location : String\l }"];
driverDTO          [shape = record, label = "{ driverDTO | + driverDTO() : \l|- Username : String\l - address : Address\l - available : Boolean\l - tripBooking : TripBooking\l - cab : Cab\l - Email : String\l - userId : Integer\l - Mobile : String\l - licenseNo : Integer\l - rating : Double\l|+ toString() : String\l # canEqual(Object) : boolean\l + hashCode() : int\l + equals(Object) : boolean\l| userId : Integer\l  licenseNo : Integer\l  Email : String\l  Mobile : String\l  rating : Double\l  Username : String\l  address : Address\l  available : Boolean\l  tripBooking : TripBooking\l  cab : Cab\l }"];

Abstractuser       -> Address            [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "address\n1"];
Admin              -> Abstractuser       [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Cab                -> Driver             [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "driver\n1"];
Customer           -> Abstractuser       [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Driver             -> Abstractuser       [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Driver             -> Cab                [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "cab\n1"];
Driver             -> TripBooking        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "tripBooking\n1"];
TripBooking        -> Driver             [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "driver\n1"];
driverDTO          -> Address            [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "address\n1"];
driverDTO          -> Cab                [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "cab\n1"];
driverDTO          -> TripBooking        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "tripBooking\n1"];

}
